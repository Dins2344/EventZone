"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const organization_1 = __importDefault(require("../../../adapters/controllers/user_side/organization"));
const organizationDBRepository_1 = require("../../../application/repositories/organizationDBRepository");
const organizationRepository_1 = require("../../database/mongoDB/repositories/organizationRepository");
const userDBRepository_1 = require("../../../application/repositories/userDBRepository");
const userRepositoryMongoDB_1 = require("../../database/mongoDB/repositories/userRepositoryMongoDB");
const cloudinary_1 = require("../middlewares/cloudinary");
const sendNotificaton_1 = require("../../../application/services/sendNotificaton");
const sendNotificationMail_1 = require("../../service/sendNotificationMail");
// import { uploadMiddleware } from "../middlewares/cloudinary";
const organizationRouter = () => {
    const router = express_1.default.Router();
    const orgController = (0, organization_1.default)(organizationDBRepository_1.organizationDbRepository, organizationRepository_1.organizationRepositoryMongoDB, userDBRepository_1.userDbRepository, userRepositoryMongoDB_1.userRepositoryMongoDB, sendNotificaton_1.sendNotificationMails, sendNotificationMail_1.sendNotificationMail);
    router.get("/get-all-event-categories", orgController.getAllEventCategoriesController);
    router.get("/get-user-organizations", orgController.getUsersOrganizationsController);
    router.get('/get-all-cities', orgController.getOrgAllCitiesController);
    router.get("/get-organization-details/:id", orgController.getOrganizationDetailController);
    router.post("/add-event-basic-info", orgController.addBasicEventInfoController);
    router.post("/add-event-media-info", cloudinary_1.upload, orgController.addMediaEventInfoController);
    router.post("/add-event-publish-info", orgController.addPublishEventInfoController);
    router.get("/get-event-details/:id", orgController.getEventDetailsController);
    router.get("/publish-event/:id", orgController.publishEventController);
    router.get("/get-users-all-events", orgController.getUsersAllEventsController);
    router.get("/get-organizers-all-events/:id", orgController.getOrganizersAllEventController);
    router.get("/get-organizers-all-bookings", orgController.getOrganizersAllBookingsController);
    router.get('/get-organization-owner/:id', orgController.getOrgOwnerDetailsController);
    router.get('/get-all-organization-categories', orgController.getAllOrganizationCategoriesController);
    router.post('/update-organization-info', cloudinary_1.upload, orgController.updateOrganizationInfoController);
    router.get('/get-monthly-sales', orgController.getMonthlySalesController);
    router.get('/get-monthly-ticket-sales', orgController.getMonthlyTicketSalesController);
    router.get('/get-ticket-type-sold', orgController.getTicketTypeSoldController);
    router.get('/get-tickets-sold-by-events', orgController.getTicketsSoldByEventsController);
    router.put("/update-event-info", orgController.updateEventInfoController);
    return router;
};
exports.default = organizationRouter;
